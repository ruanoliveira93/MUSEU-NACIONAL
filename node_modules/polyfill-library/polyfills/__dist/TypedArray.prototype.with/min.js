!function(){function t(t,e){var r=this,o=r.length,p=ToIntegerOrInfinity(t),a=p>=0?p:o+p,y=ToNumber(e);if(!1===IsValidIntegerIndex(r,a))throw new RangeError("Invalid index");for(var n=TypedArrayCreateSameType(r,[o]),i=0;i<o;){var h=ToString(i),l=i===a?y:Get(r,h);n[h]=l,i+=1}return n}(function(){var t=function(){};try{return Object.defineProperty(t,"name",{value:"test"}),!0}catch(t){return!1}})()&&Object.defineProperty(t,"name",{value:"with",writable:!1,enumerable:!1,configurable:!0}),"__proto__"in self.Int8Array.prototype&&self.Int8Array.prototype.__proto__!==Object.prototype?CreateMethodProperty(self.Int8Array.prototype.__proto__,"with",t):(CreateMethodProperty(self.Int8Array.prototype,"with",t),CreateMethodProperty(self.Uint8Array.prototype,"with",t),CreateMethodProperty(self.Uint8ClampedArray.prototype,"with",t),CreateMethodProperty(self.Int16Array.prototype,"with",t),CreateMethodProperty(self.Uint16Array.prototype,"with",t),CreateMethodProperty(self.Int32Array.prototype,"with",t),CreateMethodProperty(self.Uint32Array.prototype,"with",t),CreateMethodProperty(self.Float32Array.prototype,"with",t),CreateMethodProperty(self.Float64Array.prototype,"with",t))}();