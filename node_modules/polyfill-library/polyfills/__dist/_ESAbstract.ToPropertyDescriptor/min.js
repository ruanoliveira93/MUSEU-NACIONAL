function ToPropertyDescriptor(e){if("object"!==Type(e))throw new TypeError("ToPropertyDescriptor requires an object and was given an "+Object.prototype.toString.call(e));var r={};if(HasProperty(e,"enumerable")){var t=ToBoolean(Get(e,"enumerable"));r["[[Enumerable]]"]=t}if(HasProperty(e,"configurable")){var a=ToBoolean(Get(e,"configurable"));r["[[Configurable]]"]=a}if(HasProperty(e,"value")){var o=Get(e,"value");r["[[Value]]"]=o}if(HasProperty(e,"writable")){var i=ToBoolean(Get(e,"writable"));r["[[Writable]]"]=i}if(HasProperty(e,"get")){var n=Get(e,"get");if(!1===IsCallable(n)&&void 0!==n)throw new TypeError("getter must be a function");r["[[Get]]"]=n}if(HasProperty(e,"set")){var l=Get(e,"set");if(!1===IsCallable(l)&&void 0!==l)throw new TypeError("setter must be a function");r["[[Set]]"]=l}if((HasProperty(r,"[[Get]]")||HasProperty(r,"[[Set]]"))&&(HasProperty(r,"[[Value]]")||HasProperty(r,"[[Writable]]")))throw new TypeError("Invalid property descriptor. Cannot both specify accessors and a value or writable attribute");return r}